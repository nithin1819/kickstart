{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { Form, Input, Message, Button, Image } from 'semantic-ui-react';\nimport Campaign from '../ethereum/campaign';\nimport web3 from '../ethereum/web3';\nimport { Router } from '../routes';\n\nclass Profit extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      value: '',\n      errorMessage: '',\n      loading: false\n    });\n\n    _defineProperty(this, \"onSubmit\", async event => {\n      event.preventDefault();\n      const campaign = Campaign(this.props.address);\n      this.setState({\n        loading: true,\n        errorMessage: ''\n      });\n\n      try {\n        const accounts = await web3.eth.getAccounts();\n        await campaign.methods.getProfit(this.state.value).send({\n          from: accounts[0]\n        });\n        Router.replaceRoute(`/campaigns/${this.props.address}`);\n      } catch (err) {\n        this.setState({\n          errorMessage: err.message\n        });\n      }\n\n      this.setState({\n        loading: false,\n        value: ''\n      });\n    });\n  }\n\n  render() {\n    return __jsx(Form, {\n      onSubmit: this.onSubmit,\n      error: !!this.state.errorMessage,\n      style: {\n        marginTop: 15\n      }\n    }, __jsx(Form.Field, null, __jsx(\"label\", null, \"Send Profit\"), __jsx(Input, {\n      value: this.state.value,\n      onChange: event => this.setState({\n        value: event.target.value\n      }),\n      label: \"wei\",\n      labelPosition: \"right\"\n    })), __jsx(Message, {\n      error: true,\n      header: \"Oops!\",\n      content: this.state.errorMessage\n    }), __jsx(Button, {\n      primary: true,\n      loading: this.state.loading\n    }, \"Send Profit\"));\n  }\n\n}\n\nexport default Profit;","map":{"version":3,"sources":["/com.docker.devenvironments.code/components/profit.js"],"names":["React","Component","Form","Input","Message","Button","Image","Campaign","web3","Router","Profit","value","errorMessage","loading","event","preventDefault","campaign","props","address","setState","accounts","eth","getAccounts","methods","getProfit","state","send","from","replaceRoute","err","message","render","onSubmit","marginTop","target"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,OAAtB,EAA+BC,MAA/B,EAAsCC,KAAtC,QAAmD,mBAAnD;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,SAASC,MAAT,QAAuB,WAAvB;;AAEA,MAAMC,MAAN,SAAqBT,SAArB,CAA+B;AAAA;AAAA;;AAAA,mCACrB;AACNU,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,YAAY,EAAE,EAFR;AAGNC,MAAAA,OAAO,EAAE;AAHH,KADqB;;AAAA,sCAOlB,MAAMC,KAAN,IAAe;AACxBA,MAAAA,KAAK,CAACC,cAAN;AAEA,YAAMC,QAAQ,GAAGT,QAAQ,CAAC,KAAKU,KAAL,CAAWC,OAAZ,CAAzB;AAEA,WAAKC,QAAL,CAAc;AAAEN,QAAAA,OAAO,EAAE,IAAX;AAAiBD,QAAAA,YAAY,EAAE;AAA/B,OAAd;;AAEA,UAAI;AACF,cAAMQ,QAAQ,GAAG,MAAMZ,IAAI,CAACa,GAAL,CAASC,WAAT,EAAvB;AACA,cAAMN,QAAQ,CAACO,OAAT,CAAiBC,SAAjB,CAA2B,KAAKC,KAAL,CAAWd,KAAtC,EAA6Ce,IAA7C,CAAkD;AACtDC,UAAAA,IAAI,EAAEP,QAAQ,CAAC,CAAD;AADwC,SAAlD,CAAN;AAGAX,QAAAA,MAAM,CAACmB,YAAP,CAAqB,cAAa,KAAKX,KAAL,CAAWC,OAAQ,EAArD;AACD,OAND,CAME,OAAOW,GAAP,EAAY;AACZ,aAAKV,QAAL,CAAc;AAAEP,UAAAA,YAAY,EAAEiB,GAAG,CAACC;AAApB,SAAd;AACD;;AAED,WAAKX,QAAL,CAAc;AAAEN,QAAAA,OAAO,EAAE,KAAX;AAAkBF,QAAAA,KAAK,EAAE;AAAzB,OAAd;AACD,KAzB4B;AAAA;;AA2B7BoB,EAAAA,MAAM,GAAG;AACP,WACE,MAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKC,QAArB;AAA+B,MAAA,KAAK,EAAE,CAAC,CAAC,KAAKP,KAAL,CAAWb,YAAnD;AAAiE,MAAA,KAAK,EAAE;AAACqB,QAAAA,SAAS,EAAE;AAAZ;AAAxE,OACE,MAAC,IAAD,CAAM,KAAN,QACE,mCADF,EAEE,MAAC,KAAD;AACE,MAAA,KAAK,EAAE,KAAKR,KAAL,CAAWd,KADpB;AAEE,MAAA,QAAQ,EAAEG,KAAK,IAAI,KAAKK,QAAL,CAAc;AAAER,QAAAA,KAAK,EAAEG,KAAK,CAACoB,MAAN,CAAavB;AAAtB,OAAd,CAFrB;AAGE,MAAA,KAAK,EAAC,KAHR;AAIE,MAAA,aAAa,EAAC;AAJhB,MAFF,CADF,EAWE,MAAC,OAAD;AAAS,MAAA,KAAK,MAAd;AAAe,MAAA,MAAM,EAAC,OAAtB;AAA8B,MAAA,OAAO,EAAE,KAAKc,KAAL,CAAWb;AAAlD,MAXF,EAYE,MAAC,MAAD;AAAQ,MAAA,OAAO,MAAf;AAAgB,MAAA,OAAO,EAAE,KAAKa,KAAL,CAAWZ;AAApC,qBAZF,CADF;AAmBD;;AA/C4B;;AAkD/B,eAAeH,MAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { Form, Input, Message, Button,Image } from 'semantic-ui-react';\r\nimport Campaign from '../ethereum/campaign';\r\nimport web3 from '../ethereum/web3';\r\nimport { Router } from '../routes';\r\n\r\nclass Profit extends Component {\r\n  state = {\r\n    value: '',\r\n    errorMessage: '',\r\n    loading: false\r\n  };\r\n\r\n  onSubmit = async event => {\r\n    event.preventDefault();\r\n\r\n    const campaign = Campaign(this.props.address);\r\n\r\n    this.setState({ loading: true, errorMessage: '' });\r\n\r\n    try {\r\n      const accounts = await web3.eth.getAccounts();\r\n      await campaign.methods.getProfit(this.state.value).send({\r\n        from: accounts[0]\r\n      });\r\n      Router.replaceRoute(`/campaigns/${this.props.address}`);\r\n    } catch (err) {\r\n      this.setState({ errorMessage: err.message });\r\n    }\r\n\r\n    this.setState({ loading: false, value: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Form onSubmit={this.onSubmit} error={!!this.state.errorMessage} style={{marginTop: 15}}>\r\n        <Form.Field>\r\n          <label>Send Profit</label>\r\n          <Input\r\n            value={this.state.value}\r\n            onChange={event => this.setState({ value: event.target.value })}\r\n            label=\"wei\"\r\n            labelPosition=\"right\"\r\n          />\r\n        </Form.Field>\r\n\r\n        <Message error header=\"Oops!\" content={this.state.errorMessage} />\r\n        <Button primary loading={this.state.loading}>\r\n          Send Profit\r\n        </Button>\r\n      </Form>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Profit;\r\n"]},"metadata":{},"sourceType":"module"}