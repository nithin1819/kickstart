{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport Layout from \"../../components/Layout\";\nimport Campaign from \"../../ethereum/campaign\";\nimport { Card, Grid, Button } from \"semantic-ui-react\";\nimport web3 from \"../../ethereum/web3\";\nimport ContributeForm from \"../../components/ContributeForm\";\nimport { Link } from \"../../routes\";\n\nclass CampaignShow extends Component {\n  static async getInitialProps(props) {\n    const campaign = Campaign(props.query.address);\n    const summary = await campaign.methods.getSummary().call();\n    return {\n      address: props.query.address,\n      minimumContribution: summary[0],\n      balance: summary[1],\n      requestCount: summary[2],\n      approversCount: summary[3],\n      manager: summary[4]\n    };\n  }\n\n  renderCards() {\n    const {\n      minimumContribution,\n      balance,\n      requestCount,\n      approversCount,\n      manager\n    } = this.props;\n    const items = [{\n      header: manager,\n      meta: \"Address of Manager\",\n      description: \"The Manager who created this campaign, Manager can create requests to withdraw money.\",\n      style: {\n        overflowWrap: \"break-word\"\n      }\n    }, {\n      header: minimumContribution,\n      meta: \"Minimum Contribution (wei)\",\n      description: \"You must contribute atleast this much to become an approver\"\n    }, {\n      header: requestCount,\n      meta: \"Number of requests\",\n      description: \"A request tries to withdraw money from the contract. Requests must be approved by approvers( or contributers)\"\n    }, {\n      header: approversCount,\n      meta: \"Number of approvers\",\n      description: \"Number of people who have already donated to this campaign.\"\n    }, {\n      header: web3.utils.fromWei(balance, \"ether\"),\n      meta: \"Campaign Balance (ethers)\",\n      description: \"The balance is how much money this campaign has to spend.\"\n    }];\n    return __jsx(Card.Group, {\n      items: items\n    });\n  }\n\n  render() {\n    return __jsx(Layout, null, __jsx(\"div\", null, __jsx(\"h1\", null, \"Campaign Details\"), __jsx(Grid, null, __jsx(Grid.Row, null, __jsx(Grid.Column, {\n      mobile: 9\n    }, this.renderCards()), __jsx(Grid.Column, {\n      mobile: 5\n    }, __jsx(ContributeForm, {\n      address: this.props.address\n    }))), __jsx(Grid.Row, null, __jsx(Grid.Column, null, __jsx(Link, {\n      route: `/campaigns/${this.props.address}/requests`\n    }, __jsx(\"a\", null, __jsx(Button, {\n      primary: true\n    }, \"View Requests\"))))))));\n  }\n\n}\n\nexport default CampaignShow;","map":{"version":3,"sources":["C:/Users/nithi/OneDrive/Desktop/kickstart-master/pages/campaigns/show.js"],"names":["React","Component","Layout","Campaign","Card","Grid","Button","web3","ContributeForm","Link","CampaignShow","getInitialProps","props","campaign","query","address","summary","methods","getSummary","call","minimumContribution","balance","requestCount","approversCount","manager","renderCards","items","header","meta","description","style","overflowWrap","utils","fromWei","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Layout from \"../../components/Layout\";\nimport Campaign from \"../../ethereum/campaign\";\nimport { Card, Grid, Button } from \"semantic-ui-react\";\nimport web3 from \"../../ethereum/web3\";\nimport ContributeForm from \"../../components/ContributeForm\";\nimport { Link } from \"../../routes\";\n\nclass CampaignShow extends Component {\n  static async getInitialProps(props) {\n    const campaign = Campaign(props.query.address);\n    const summary = await campaign.methods.getSummary().call();\n    return {\n      address: props.query.address,\n      minimumContribution: summary[0],\n      balance: summary[1],\n      requestCount: summary[2],\n      approversCount: summary[3],\n      manager: summary[4],\n    };\n  }\n\n  renderCards() {\n    const {\n      minimumContribution,\n      balance,\n      requestCount,\n      approversCount,\n      manager,\n    } = this.props;\n\n    const items = [\n      {\n        header: manager,\n        meta: \"Address of Manager\",\n        description:\n          \"The Manager who created this campaign, Manager can create requests to withdraw money.\",\n        style: { overflowWrap: \"break-word\" },\n      },\n      {\n        header: minimumContribution,\n        meta: \"Minimum Contribution (wei)\",\n        description:\n          \"You must contribute atleast this much to become an approver\",\n      },\n      {\n        header: requestCount,\n        meta: \"Number of requests\",\n        description:\n          \"A request tries to withdraw money from the contract. Requests must be approved by approvers( or contributers)\",\n      },\n      {\n        header: approversCount,\n        meta: \"Number of approvers\",\n        description:\n          \"Number of people who have already donated to this campaign.\",\n      },\n      {\n        header: web3.utils.fromWei(balance, \"ether\"),\n        meta: \"Campaign Balance (ethers)\",\n        description:\n          \"The balance is how much money this campaign has to spend.\",\n      },\n    ];\n\n    return <Card.Group items={items} />;\n  }\n  render() {\n    return (\n      <Layout>\n        <div>\n          <h1>Campaign Details</h1>\n          <Grid>\n            <Grid.Row>\n              <Grid.Column mobile={9}>{this.renderCards()}</Grid.Column>\n              <Grid.Column mobile={5}>\n                <ContributeForm address={this.props.address} />\n              </Grid.Column>\n            </Grid.Row>\n            <Grid.Row>\n              <Grid.Column>\n                <Link route={`/campaigns/${this.props.address}/requests`}>\n                  <a>\n                    <Button primary>View Requests</Button>\n                  </a>\n                </Link>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </div>\n      </Layout>\n    );\n  }\n}\n\nexport default CampaignShow;\n"]},"metadata":{},"sourceType":"module"}