{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport Layout from \"../../components/Layout\";\nimport Campaign from \"../../ethereum/campaign\";\nimport { Card, Grid, Button } from \"semantic-ui-react\";\nimport web3 from \"../../ethereum/web3\";\nimport ContributeForm from \"../../components/ContributeForm\";\nimport { Link } from \"../../routes\";\nimport Profit from '../../components/profit';\n\nvar CampaignShow = /*#__PURE__*/function (_Component) {\n  _inherits(CampaignShow, _Component);\n\n  var _super = _createSuper(CampaignShow);\n\n  function CampaignShow() {\n    _classCallCheck(this, CampaignShow);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(CampaignShow, [{\n    key: \"renderCards\",\n    value: function renderCards() {\n      var _this$props = this.props,\n          minimumContribution = _this$props.minimumContribution,\n          balance = _this$props.balance,\n          requestCount = _this$props.requestCount,\n          approversCount = _this$props.approversCount,\n          manager = _this$props.manager,\n          name = _this$props.name,\n          description = _this$props.description,\n          image = _this$props.image,\n          target = _this$props.target;\n      var items = [{\n        header: __jsx(\"img\", {\n          src: image,\n          style: {\n            width: 100,\n            align: \"center\"\n          }\n        }),\n        meta: name,\n        description: description\n      }, {\n        header: manager,\n        meta: \"Address of Manager\",\n        description: \"The Manager who created this campaign, Manager can create requests to withdraw money.\",\n        style: {\n          overflowWrap: \"break-word\"\n        }\n      }, {\n        header: minimumContribution,\n        meta: \"Minimum Contribution (wei)\",\n        description: \"You must contribute atleast this much to become an approver\"\n      }, {\n        header: requestCount,\n        meta: \"Number of requests\",\n        description: \"A request tries to withdraw money from the contract. Requests must be approved by approvers( or contributers)\"\n      }, {\n        header: approversCount,\n        meta: \"Number of approvers\",\n        description: \"Number of people who have already donated to this campaign.\"\n      }, {\n        header: web3.utils.fromWei(balance, \"ether\"),\n        meta: \"Campaign Balance (ethers)\",\n        description: \"The balance is how much money this campaign has to spend.\"\n      }];\n      return __jsx(Card.Group, {\n        items: items\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(Layout, null, __jsx(\"div\", null, __jsx(\"h1\", null, \"Campaign Details\"), __jsx(Grid, null, __jsx(Grid.Row, null, __jsx(Grid.Column, {\n        mobile: 9\n      }, this.renderCards()), __jsx(Grid.Column, {\n        mobile: 5\n      }, __jsx(ContributeForm, {\n        address: this.props.address\n      }))), __jsx(Grid.Row, null, __jsx(Grid.Column, null, __jsx(Link, {\n        route: \"/campaigns/\".concat(this.props.address, \"/requests\")\n      }, __jsx(\"a\", null, __jsx(Button, {\n        primary: true\n      }, \"View Requests\"))))))));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(props) {\n      var campaign, summary;\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              campaign = Campaign(props.query.address);\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(campaign.methods.getSummary().call());\n\n            case 3:\n              summary = _context.sent;\n              return _context.abrupt(\"return\", {\n                address: props.query.address,\n                minimumContribution: summary[0],\n                balance: summary[1],\n                requestCount: summary[2],\n                approversCount: summary[3],\n                manager: summary[4],\n                name: summary[5],\n                description: summary[6],\n                image: summary[7],\n                target: summary[8]\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }]);\n\n  return CampaignShow;\n}(Component);\n\nexport default CampaignShow;","map":{"version":3,"sources":["C:/Users/nithi/OneDrive/Desktop/kickstart-master/pages/campaigns/show.js"],"names":["React","Component","Layout","Campaign","Card","Grid","Button","web3","ContributeForm","Link","Profit","CampaignShow","props","minimumContribution","balance","requestCount","approversCount","manager","name","description","image","target","items","header","width","align","meta","style","overflowWrap","utils","fromWei","renderCards","address","campaign","query","methods","getSummary","call","summary"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Layout from \"../../components/Layout\";\nimport Campaign from \"../../ethereum/campaign\";\nimport { Card, Grid, Button } from \"semantic-ui-react\";\nimport web3 from \"../../ethereum/web3\";\nimport ContributeForm from \"../../components/ContributeForm\";\nimport { Link } from \"../../routes\";\nimport Profit from '../../components/profit';\n\nclass CampaignShow extends Component {\n  static async getInitialProps(props) {\n    const campaign = Campaign(props.query.address);\n    const summary = await campaign.methods.getSummary().call();\n    return {\n      address: props.query.address,\n      minimumContribution: summary[0],\n      balance: summary[1],\n      requestCount: summary[2],\n      approversCount: summary[3],\n      manager: summary[4],\n      name: summary[5],\n      description: summary[6],\n      image: summary[7],\n      target: summary[8]\n    };\n  }\n\n  renderCards() {\n    const {\n      minimumContribution,\n      balance,\n      requestCount,\n      approversCount,\n      manager,\n      name,\n      description,\n      image,\n      target\n    } = this.props;\n\n    const items = [\n      {\n        header: <img src={image} style={{ width: 100, align: \"center\"}} />,\n        meta: name,\n        description: description\n      },\n      {\n        header: manager,\n        meta: \"Address of Manager\",\n        description:\n          \"The Manager who created this campaign, Manager can create requests to withdraw money.\",\n        style: { overflowWrap: \"break-word\" },\n      },\n      {\n        header: minimumContribution,\n        meta: \"Minimum Contribution (wei)\",\n        description:\n          \"You must contribute atleast this much to become an approver\",\n      },\n      {\n        header: requestCount,\n        meta: \"Number of requests\",\n        description:\n          \"A request tries to withdraw money from the contract. Requests must be approved by approvers( or contributers)\",\n      },\n      {\n        header: approversCount,\n        meta: \"Number of approvers\",\n        description:\n          \"Number of people who have already donated to this campaign.\",\n      },\n      {\n        header: web3.utils.fromWei(balance, \"ether\"),\n        meta: \"Campaign Balance (ethers)\",\n        description:\n          \"The balance is how much money this campaign has to spend.\",\n      },\n    ];\n\n    return <Card.Group items={items} />;\n  }\n  render() {\n    return (\n      <Layout>\n        <div>\n          <h1>Campaign Details</h1>\n          <Grid>\n            <Grid.Row>\n              <Grid.Column mobile={9}>{this.renderCards()}</Grid.Column>\n              <Grid.Column mobile={5}>\n                <ContributeForm address={this.props.address} />\n              </Grid.Column>\n            </Grid.Row>\n            <Grid.Row>\n              <Grid.Column>\n                <Link route={`/campaigns/${this.props.address}/requests`}>\n                  <a>\n                    <Button primary>View Requests</Button>\n                  </a>\n                </Link>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </div>\n      </Layout>\n    );\n  }\n}\n\nexport default CampaignShow;\n"]},"metadata":{},"sourceType":"module"}